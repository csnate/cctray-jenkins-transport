<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThoughtWorks.CruiseControl.Remote</name>
    </assembly>
    <members>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings">
            <summary>
            Defines the start-up settings for a communications client.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings.BackwardsCompatable">
            <summary>
            Should the client handle server versions older than 1.5.0.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings.UseEncryption">
            <summary>
            Should all communications use encryption.
            </summary>
            <remarks>
            This setting is mutually exclusive with BackwardsCompatable.
            </remarks>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings.FetchVersionOnStartUp">
            <summary>
            Gets or sets a value indicating whether the version will be fetched on start-up.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs">
            <summary>
            The arguments from a communications event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.Messages.CommunicationsMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs"/> class.
            </summary>
            <param name="action">The action that the event is for.</param>
            <param name="message">The message that triggered the event.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs.Message">
            <summary>
            Gets the message that triggered this event.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs.Action">
            <summary>
            Gets the action that triggered this event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException">
            <summary>
            An exception that occurred during communications.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CommunicationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CommunicationsException"/>.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CommunicationsException.ErrorType">
            <summary>
            The error tytpe returned from the server.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient">
            <summary>
            A client connection to an old (pre-1.5) version of CruiseControl.NET via HTTP.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase">
            <summary>
            A base class to implement client-side communications with a CruiseControl.NET server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetProjectStatus">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ForceBuild(System.String)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="projectName">project to force</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ForceBuild(System.String,System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Forces a build for the named project with some parameters.
            </summary>
            <param name="projectName">project to force</param>
            <param name="parameters"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.AbortBuild(System.String)">
            <summary>
            Attempts to abort a current project build.
            </summary>
            <param name="projectName">The name of the project to abort.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.Request(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationRequest)">
            <summary>
            Sends a build request to the server.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="integrationRequest"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.StartProject(System.String)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.StopProject(System.String)">
            <summary>
            Stop project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Message)">
            <summary>
            Sends a message for a project.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="message"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.WaitForExit(System.String)">
            <summary>
            Waits for a project to stop.
            </summary>
            <param name="projectName">The name of the project to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.CancelPendingRequest(System.String)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetCruiseServerSnapshot">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetLatestBuildName(System.String)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetBuildNames(System.String)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetMostRecentBuildNames(System.String,System.Int32)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetLog(System.String,System.String)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
            <param name="projectName">Name of the project.</param>
            <param name="buildName">Name of the build.</param>
            <returns>The log file for the build.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetLog(System.String,System.String,System.Boolean)">
            <summary>
            Returns the build log contents for requested project and build name optionally using compression.
            </summary>
            <param name="projectName">Name of the project.</param>
            <param name="buildName">Name of the build.</param>
            <param name="compress">If set to <c>true</c> the log will be compressed.</param>
            <returns>The log file for the build.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetServerLog">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetServerLog(System.String)">
            <summary>
            Returns a log of recent build server activity for a specific project. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetServerVersion">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.AddProject(System.String)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.DeleteProject(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetProject(System.String)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.UpdateProject(System.String,System.String)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetExternalLinks(System.String)">
            <summary>
            Retrieves any external links.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetArtifactDirectory(System.String)">
            <summary>
            Retrieves the name of the artifact directory.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetStatisticsDocument(System.String)">
            <summary>
            Retrieves the statistics document.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetModificationHistoryDocument(System.String)">
            <summary>
            Retrieves a document containing the history of all the changes.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetRSSFeed(System.String)">
            <summary>
            Retrieves the RSS feed URL.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.Login(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Logs a user into the session and generates a session.
            </summary>
            <returns>True if the request is successful, false otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.Logout">
            <summary>
            Logs a user out of the system and removes their session.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetSecurityConfiguration">
            <summary>
            Retrieves the security configuration.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ListUsers">
            <summary>
            Lists all the users who have been defined in the system.
            </summary>
            <returns>
            A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/> containing the details on all the users
            who have been defined.
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.DiagnoseSecurityPermissions(System.String,System.String[])">
            <summary>
            Checks the security permissions for a user against one or more projects.
            </summary>
            <returns>A set of diagnostics information.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ReadAuditRecords(System.Int32,System.Int32)">
            <summary>
            Reads the specified number of audit events.
            </summary>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ReadAuditRecords(System.Int32,System.Int32,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Reads the specified number of filtered audit events.
            </summary>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ListBuildParameters(System.String)">
            <summary>
            Lists the build parameters for a project.
            </summary>
            <param name="projectName">The name of the project to retrieve the parameters for.</param>
            <returns>The list of parameters (if any).</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ChangePassword(System.String,System.String)">
            <summary>
            Changes the password of the user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ResetPassword(System.String,System.String)">
            <summary>
            Resets the password for a user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.TakeStatusSnapshot(System.String)">
            <summary>
            Takes a snapshot of the current project status.
            </summary>
            <param name="projectName">The name of the project.</param>
            <returns>The current status snapshot.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.RetrievePackageList(System.String)">
            <summary>
            Retrieves the current list of packages for a project.
            </summary>
            <param name="projectName">The name of the project.</param>
            <returns>The currently available packages.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.RetrievePackageList(System.String,System.String)">
            <summary>
            Retrieves the current list of packages for a build within a project.
            </summary>
            <param name="projectName">The name of the project.</param>
            <param name="buildLabel">The label of the build.</param>
            <returns>The currently available packages.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.RetrieveFileTransfer(System.String,System.String)">
            <summary>
            Retrieves a file transfer instance.
            </summary>
            <param name="projectName">The name of the project.</param>
            <param name="fileName">The name of the file.</param>
            <returns>The file transfer instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetFreeDiskSpace">
            <summary>
            Retrieve the amount of free disk space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.GetLinkedSiteId(System.String,System.String)">
            <summary>
            Retrieve the identifer for this project on a linked site.
            </summary>
            <param name="projectName"></param>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ProcessMessage(System.String,System.String)">
            <summary>
            Processes a message.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message in an XML format.</param>
            <returns>The response message in an XML format.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ProcessMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Processes a message.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message.</param>
            <returns>The response message.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ProcessSingleAction``1(System.Action{``0},``0)">
            <summary>
            Process a single action within a monitor lock.
            </summary>
            <typeparam name="T">The type of parameter to pass.</typeparam>
            <param name="action">The action to process.</param>
            <param name="value">The value to pass to the action.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ListServers">
            <summary>
            Lists the servers that this client connection exposes.
            </summary>
            <returns>The list of available servers.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.FireRequestSending(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.RequestSending"/> event.
            </summary>
            <param name="action">The action that is being sent.</param>
            <param name="request">The request that is being sent.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.FireResponseReceived(System.String,ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ResponseReceived"/> event.
            </summary>
            <param name="action">The action that the response is for.</param>
            <param name="response">The response that was received.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.TargetServer">
            <summary>
            The server that will be targeted by all messages.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.SessionToken">
            <summary>
            The session token to use.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.IsBusy">
            <summary>
            Is this client busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.IsLoggedIn">
            <summary>
            Is this client currently logged in.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.DisplayName">
            <summary>
            Gets or sets the display name of the user.
            </summary>
            <value>The name of the user.</value>
            <remarks>
            This will only be used on non-secure servers - if the server is secured then the user name from
            the session token will be used instead.
            </remarks>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.RequestSending">
            <summary>
            A request message is being sent.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase.ResponseReceived">
            <summary>
            A response message has been received.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient"/>.
            </summary>
            <param name="serverUri">The address of the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.#ctor(System.String,System.Net.WebClient)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient"/>.
            </summary>
            <param name="serverUri">The address of the server.</param>
            <param name="client">The <see cref="T:System.Net.WebClient"/> to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.GetProjectStatus">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.ForceBuild(System.String)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="projectName">project to force</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.ForceBuild(System.String,System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Forces a build for a named project.
            </summary>
            <param name="projectName">The project to force.</param>
            <param name="parameters">The parameters to pass into the project (these are ignored).</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.AbortBuild(System.String)">
            <summary>
            Attempts to abort a current project build.
            </summary>
            <param name="projectName">The name of the project to abort.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.Request(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationRequest)">
            <summary>
            Sends a build request to the server.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="integrationRequest"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.StartProject(System.String)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.StopProject(System.String)">
            <summary>
            Stop project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.GetCruiseServerSnapshot">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.GetServerVersion">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.GenerateUrl(System.String)">
            <summary>
            Generate a URL to the server.
            </summary>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.ParseProjects(System.Xml.XmlNodeList)">
            <summary>
            Parse an array of project definitions.
            </summary>
            <param name="projectNodes"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.ParseQueues(System.Xml.XmlDocument,ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot)">
            <summary>
            Parse the queue information.
            </summary>
            <param name="document"></param>
            <param name="snapshot"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.RetrieveAttributeValue(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Retrieves an attribute value.
            </summary>
            <param name="element"></param>
            <param name="attributeName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.RetrieveAttributeValue(System.Xml.XmlElement,System.String,System.DateTime)">
            <summary>
            Retrieves an attribute value.
            </summary>
            <param name="element"></param>
            <param name="attributeName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.RetrieveAttributeValue``1(System.Xml.XmlElement,System.String,``0)">
            <summary>
            Retrieves an attribute value.
            </summary>
            <param name="element"></param>
            <param name="attributeName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.SendButtonPush(System.String,System.String)">
            <summary>
            Sends a button push command.
            </summary>
            <param name="command"></param>
            <param name="project">The project the command is for.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.TargetServer">
            <summary>
            The server that will be targeted by all messages.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.IsBusy">
            <summary>
            Is this client busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerHttpClient.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.EncryptingConnection">
            <summary>
            A server connection that will encrypt any transmitted data.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase">
            <summary>
            A base class for sever connections.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.FireRequestSending(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.RequestSending"/> event.
            </summary>
            <param name="action">The action that is being sent.</param>
            <param name="request">The request that is being sent.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.FireResponseReceived(System.String,ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.ResponseReceived"/> event.
            </summary>
            <param name="action">The action that the response is for.</param>
            <param name="response">The response that was received.</param>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.RequestSending">
            <summary>
            A request message is being sent.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ServerConnectionBase.ResponseReceived">
            <summary>
            A response message has been received.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.IServerConnection">
            <summary>
            A channel for communicating to a remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IServerConnection.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <returns>The response from the server.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IServerConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IServerConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest,System.Object)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <param name="userState">Any user state data.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IServerConnection.CancelAsync">
            <summary>
            Cancels an asynchronous operation.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IServerConnection.CancelAsync(System.Object)">
            <summary>
            Cancels an asynchronous operation.
            </summary>
            <param name="userState"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IServerConnection.Type">
            <summary>
            The type of connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IServerConnection.ServerName">
            <summary>
            The name of the server that this connection is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IServerConnection.IsBusy">
            <summary>
            Is this connection busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IServerConnection.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.IServerConnection.SendMessageCompleted">
            <summary>
            A SendMessageAsync has completed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.IServerConnection.RequestSending">
            <summary>
            A request message is being sent.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.IServerConnection.ResponseReceived">
            <summary>
            A response message has been received.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.#ctor(ThoughtWorks.CruiseControl.Remote.IServerConnection)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.EncryptingConnection"/>.
            </summary>
            <param name="innerConnection">The connection for sending messages.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <returns>The response from the server.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest,System.Object)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <param name="userState">Any user state data.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.CancelAsync">
            <summary>
            Cancels an asynchronous operation.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.CancelAsync(System.Object)">
            <summary>
            Cancels an asynchronous operation.
            </summary>
            <param name="userState"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.Dispose">
            <summary>
            Disposes the .NET remoting client.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.InitialisePassword">
            <summary>
            Initialise the password.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.PassOnSendMessageCompleted(System.Object,ThoughtWorks.CruiseControl.Remote.MessageReceivedEventArgs)">
            <summary>
            Passes on the <see cref="E:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.SendMessageCompleted"/> event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.PassOnRequestSending(System.Object,ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs)">
            <summary>
            Passes on the RequestSending event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.PassOnResponseReceived(System.Object,ThoughtWorks.CruiseControl.Remote.CommunicationsEventArgs)">
            <summary>
            Passes on the ResponseReceived event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.Type">
            <summary>
            The type of connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.ServerName">
            <summary>
            The name of the server that this connection is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.IsBusy">
            <summary>
            Is this connection busy performing an operation.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.EncryptingConnection.SendMessageCompleted">
            <summary>
            A SendMessageAsync has completed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory">
            <summary>
            Factory for building <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instances.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateHttpClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateHttpClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateHttpClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateHttpClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateRemotingClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateRemotingClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateRemotingClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.GenerateRemotingClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.ResetCache">
            <summary>
            Resets the entire client cache.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClientFactory.ResetCache(System.String)">
            <summary>
            Resets the cache for a client address.
            </summary>
            <param name="address">The address to reset.</param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.CommunicationsMessage">
            <summary>
            The base message class for all requests and responses to inherit from.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.CommunicationsMessage.Timestamp">
            <summary>
            The timestamp of when this message was generated.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.CommunicationsMessage.ChannelInformation">
            <summary>
            Information on what channel was used to transmit this request.
            </summary>
            <remarks>
            This information will typically be set by the communications channel. It will not
            be passed between the server and the client.
            </remarks>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest">
            <summary>
            Defines an encrypted request.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest">
            <summary>
            The base level message for all server-related requests.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.Equals(System.Object)">
            <summary>
            Checks if this request is the same as another.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.GetHashCode">
            <summary>
            Returns the hash code for this request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.ToString">
            <summary>
            Converts this request into a string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.Identifier">
            <summary>
            A unique identifier for the message.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.ServerName">
            <summary>
            The name of the server that this message is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.SourceName">
            <summary>
            The name of the machine that this message is from.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.SessionToken">
            <summary>
            A token to identify the session.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest.DisplayName">
            <summary>
            Gets or sets the display name of the user.
            </summary>
            <value>The name of the user.</value>
            <remarks>
            This will only be used on non-secure servers - if the server is secured then the user name from
            the session token will be used instead.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="encryptedData">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest.EncryptedData">
            <summary>
            The encrypted data.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedRequest.Action">
            <summary>
            The action to perform.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse">
            <summary>
            An encrypted response.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.Response">
            <summary>
            The base level message for all responses.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.Equals(System.Object)">
            <summary>
            Checks if this response is the same as another.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.GetHashCode">
            <summary>
            Returns the hash code for this response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.ToString">
            <summary>
            Converts this request into a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.Response.ConcatenateErrors">
            <summary>
            Concatenates all the error messages into one string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.Response.ErrorMessages">
            <summary>
            Any error messages.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.Response.RequestIdentifier">
            <summary>
            The identifier of the request that this response is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.Response.Result">
            <summary>
            The outcome of the processing.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.EncryptedResponse.EncryptedData">
            <summary>
            The encrypted data.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest">
            <summary>
            A message for requesting an item from a project.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest">
            <summary>
            The base level message for all project-related requests.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest.ProjectName">
            <summary>
            The name of the project that this message is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest.CompressData">
            <summary>
            Gets or sets a value indicating whether the data should be compressed.
            </summary>
            <value><c>true</c> if the data should be compressed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest.ItemName">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue">
            <summary>
            A build queue that is being monitored on a remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.Server,ThoughtWorks.CruiseControl.Remote.QueueSnapshot)">
            <summary>
            Initialise a new build queue.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="server">The server this queue belongs to.</param>
            <param name="buildQueue">The actual build queue details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Update(ThoughtWorks.CruiseControl.Remote.QueueSnapshot)">
            <summary>
            Updates the details on a build queue.
            </summary>
            <param name="value">The new build queue details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Equals(System.Object)">
            <summary>
            Compare if two queues are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Equals(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue)">
            <summary>
            Compare if two queues are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.GetHashCode">
            <summary>
            Return the hash code for this queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.FireBuildQueueRequestAdded(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.BuildQueueRequestAdded"/> event.
            </summary>
            <param name="request">The request that was added.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.FireBuildQueueRequestRemoved(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.BuildQueueRequestRemoved"/> event.
            </summary>
            <param name="request">The request that was removed.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.FirePropertyChanged(System.String)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Server">
            <summary>
            The server this build queue belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Name">
            <summary>
            The name of the build queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Requests">
            <summary>
            Any current or pending requests.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Exception">
            <summary>
            Any server exception details.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.Data">
            <summary>
            Gets the data bag.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.BuildQueueRequestAdded">
            <summary>
            A new request has been added.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.BuildQueueRequestRemoved">
            <summary>
            An existing request has been removed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.PropertyChanged">
            <summary>
            A property has been changed on this queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue.InnerBuildQueue">
            <summary>
            The underlying build queue status.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueChangedArgs">
            <summary>
            Arguments for a build queue change event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueChangedArgs.#ctor(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueChangedArgs"/>.
            </summary>
            <param name="buildQueue">The build queue that changed.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueChangedArgs.BuildQueue">
            <summary>
            The build queue that has been changed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest">
            <summary>
            A build queue request that is being monitored on a remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue,ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot)">
            <summary>
            Initialise a new build queue request.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="buildQueue">The queue this project belongs to.</param>
            <param name="snapshot">The actual build queue request details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Update(ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot)">
            <summary>
            Updates the details on a build queue.
            </summary>
            <param name="value">The new build queue details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Equals(System.Object)">
            <summary>
            Compares if two objects are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Equals(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest)">
            <summary>
            Compares if two build requests are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.GetHashCode">
            <summary>
            Get the hash code for this request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.FirePropertyChanged(System.String)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.BuildQueue">
            <summary>
            The queue this request belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Name">
            <summary>
            The name of the project this request is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Project">
            <summary>
            The project that this request is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.Activity">
            <summary>
            The current activity.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.RequestTime">
            <summary>
            The date and time this request was added.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.PropertyChanged">
            <summary>
            A property has been changed on this project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest.InnerBuildQueueRequest">
            <summary>
            The underlying build queue status.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequestChangedArgs">
            <summary>
            Arguments for a build queue request change event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequestChangedArgs.#ctor(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequest)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequestChangedArgs"/>.
            </summary>
            <param name="buildQueue">The build queue request that changed.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueueRequestChangedArgs.BuildQueueRequest">
            <summary>
            The build queue request that has been changed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.DataBag">
            <summary>
            A general data storage bag.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.DataBag.Get``1">
            <summary>
            Gets a data item from the bag.
            </summary>
            <typeparam name="TData">The type of data item to get.</typeparam>
            <returns>The data item if found, null otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.DataBag.Set``1(``0)">
            <summary>
            Sets a data item in the bag.
            </summary>
            <typeparam name="TData">The type of data item to set.</typeparam>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.DataBag.Delete``1">
            <summary>
            Deletes a data item from the bag.
            </summary>
            <typeparam name="TData">The type of data item to delete.</typeparam>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher">
            <summary>
            A watcher that watches a remote server and returns status snapshots.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher.Refresh">
            <summary>
            Checks the server for a refresh.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher.Update">
            <summary>
            An update has been received from a remote server.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher">
            <summary>
            Only checks for changes when manually requested.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher"/>.
            </summary>
            <param name="client">The underlying client to poll.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher.Refresh">
            <summary>
            Checks the server for a refresh.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher.Dispose">
            <summary>
            Cleans up when this watcher is no longer needed.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher.RetrieveSnapshot">
            <summary>
            Attempt to retrieve a snapshot from the remote server.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.ManualServerWatcher.Update">
            <summary>
            An update has been received from a remote server.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher">
            <summary>
            Polls the remote server on a regular basis for any changes.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher"/>.
            </summary>
            <param name="client">The underlying client to poll.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.Refresh">
            <summary>
            Checks the server for a refresh.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.Dispose">
            <summary>
            Cleans up when this watcher is no longer needed.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.Poll">
            <summary>
            Checks to see if the server should be checked.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.RetrieveSnapshot">
            <summary>
            Attempt to retrieve a snapshot from the remote server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.Interval">
            <summary>
            The interval to poll (in seconds).
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.PollingServerWatcher.Update">
            <summary>
            An update has been received from a remote server.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.Project">
            <summary>
            A project that is being monitored on a remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.Server,ThoughtWorks.CruiseControl.Remote.ProjectStatus)">
            <summary>
            Initialise a new project.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="server">The server this project belongs to.</param>
            <param name="project">The actual project details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Update(ThoughtWorks.CruiseControl.Remote.ProjectStatus)">
            <summary>
            Updates the details on a project.
            </summary>
            <param name="value">The new project details.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.ForceBuild">
            <summary>
            Sends a force build request to the remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.ForceBuild(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Sends a force build request to the remote server.
            </summary>
            <param name="parameters">The parameters for the build.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.AbortBuild">
            <summary>
            Sends an abort build request to the remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Start">
            <summary>
            Sends a start project request to the remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Stop">
            <summary>
            Sends a stop project request to the remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.RetrieveCurrentStatus">
            <summary>
            Retrieves the current snapshot of the status.
            </summary>
            <returns>The current status snapshot.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.RetrieveParameters">
            <summary>
            Retrieve the parameters for this project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Equals(System.Object)">
            <summary>
            Compare if two projects are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Equals(ThoughtWorks.CruiseControl.Remote.Monitor.Project)">
            <summary>
            Compare if two projects are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.GetHashCode">
            <summary>
            Return the hash code for this project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.FirePropertyChanged(System.String)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Project.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.FireUpdated">
            <summary>
            Fire the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Updated"/> event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Project.LoadBuilds(ThoughtWorks.CruiseControl.Remote.ProjectStatus)">
            <summary>
            Load the builds for the project.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Server">
            <summary>
            The server this project belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Name">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.BuildStage">
            <summary>
            The current build stage.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Status">
            <summary>
            The current project status.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.BuildStatus">
            <summary>
            The current build status.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Activity">
            <summary>
            The current activity.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Description">
            <summary>
            The description of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Category">
            <summary>
            The project category.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.BuildQueue">
            <summary>
            The build queue this project belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Queue">
            <summary>
            The name of the queue this project belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.QueuePriority">
            <summary>
            The priority of the project within the queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.WebURL">
            <summary>
            The URL for the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.LastBuildDate">
            <summary>
            The date and time the project was last built.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.LastBuildLabel">
            <summary>
            The last build label (independent of the outcome of the build).
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.LastSuccessfulBuildLabel">
            <summary>
            The last successful build label.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.NextBuildTime">
            <summary>
            The date and time of the next build check.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Messages">
            <summary>
            Any associated messages for the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Builds">
            <summary>
            The builds for this project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Exception">
            <summary>
            Any server exception details.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Data">
            <summary>
            Gets the data bag.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Project.PropertyChanged">
            <summary>
            A property has been changed on this project.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Project.Updated">
            <summary>
            The project has been updated.
            </summary>
            <remarks>
            <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Project.PropertyChanged"/> will be fired when any properties change, this event will be fired whether or
            not any properties change.
            </remarks>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Project.InnerProject">
            <summary>
            The underlying project status.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild">
            <summary>
            Details on a build for a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.Monitor.Project,ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase)">
            <summary>
            Initialise a new project build entity.
            </summary>
            <param name="buildName">The name of the build.</param>
            <param name="project">The project this build belongs to.</param>
            <param name="client">The underlying client.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.Name">
            <summary>
            The name of the build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.Log">
            <summary>
            The log for the build.
            </summary>
            <remarks>
            This property uses lazy loading to retrieve the log from the server.
            </remarks>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.BuildDate">
            <summary>
            The date and time of the build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.Label">
            <summary>
            The label of the build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectBuild.IsSuccessful">
            <summary>
            Was the build successful or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectChangedArgs">
            <summary>
            Arguments for a project change event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectChangedArgs.#ctor(ThoughtWorks.CruiseControl.Remote.Monitor.Project)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectChangedArgs"/>.
            </summary>
            <param name="project">The project that changed.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ProjectChangedArgs.Project">
            <summary>
            The project that has been changed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server">
            <summary>
            A monitor to watch a remote server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with the default watcher.
            </summary>
            <param name="address">The address of the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with the default watcher.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with the default watcher.
            </summary>
            <param name="client">The underlying client.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with the default watcher.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="settings">The start-up settings to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with a watcher and a client.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="watcher">The watcher to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.Server"/> with a watcher and a client.
            </summary>
            <param name="client">The underlying client.</param>
            <param name="watcher">The watcher to use.</param>
            <param name="settings">The start-up settings to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.GetDisplayName">
            <summary>
            Gets the display name for the server.
            </summary>
            <returns>The user-set display name (if set) or the target server/address combination.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.GetDisplayName(System.Boolean)">
            <summary>
            Gets the display name for the server.
            </summary>
            <param name="includeAddress">Should the address be included?</param>
            <returns>The user-set display name (if set) or the target server/address combination.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Refresh">
            <summary>
            Force a refresh of the server status.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Dispose">
            <summary>
            Cleans up when this server is no longer needed.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FindProject(System.String)">
            <summary>
            Attempt to find a project by its name.
            </summary>
            <param name="name">The name of the project to find.</param>
            <returns>The project if found, null otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FindBuildQueue(System.String)">
            <summary>
            Attempt to find a build queue by its name.
            </summary>
            <param name="name">The name of the build queue to find.</param>
            <returns>The build queue if found, null otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Login(System.String,System.String)">
            <summary>
            Attempt to login a user.
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Logout">
            <summary>
            Logout the current user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Equals(System.Object)">
            <summary>
            Compare if two servers are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Equals(ThoughtWorks.CruiseControl.Remote.Monitor.Server)">
            <summary>
            Compare if two servers are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.GetHashCode">
            <summary>
            Return the hash code for this server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FireProjectAdded(ThoughtWorks.CruiseControl.Remote.Monitor.Project)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.ProjectAdded"/> event.
            </summary>
            <param name="project">The project that was added.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FireProjectRemoved(ThoughtWorks.CruiseControl.Remote.Monitor.Project)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.ProjectRemoved"/> event.
            </summary>
            <param name="project">The project that was added.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FireBuildQueueAdded(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.BuildQueueAdded"/> event.
            </summary>
            <param name="buildQueue">The build queue that was added.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FireBuildQueueRemoved(ThoughtWorks.CruiseControl.Remote.Monitor.BuildQueue)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.BuildQueueRemoved"/> event.
            </summary>
            <param name="buildQueue">The build queue that was added.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FirePropertyChanged(System.String)">
            <summary>
            Fires the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.FireLoginChanged">
            <summary>
            Fire the <see cref="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.LoginChanged"/> event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.OnWatcherUpdate(System.Object,ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs)">
            <summary>
            Update the status based on the latest snapshot.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.Server.InitialiseServer(ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase,ThoughtWorks.CruiseControl.Remote.Monitor.IServerWatcher,System.Boolean)">
            <summary>
            Initialise the server.
            </summary>
            <param name="client"></param>
            <param name="watcher"></param>
            <param name="fetchVersion">Whether the version number should be fetched or not.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.DisplayName">
            <summary>
            The display name of the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Name">
            <summary>
            The name of the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.TargetAddress">
            <summary>
            Gets the target plus address for the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Projects">
            <summary>
            The projects for the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.BuildQueues">
            <summary>
            The build queues for the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Exception">
            <summary>
            Any server exception details.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Client">
            <summary>
            The underlying server client.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Watcher">
            <summary>
            The underlying watcher.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Version">
            <summary>
            The current version of the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.IsLoggedIn">
            <summary>
            Is there a user logged in (i.e. does the client has a valid session.)
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.Server.Data">
            <summary>
            Gets the data bag.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.ProjectAdded">
            <summary>
            A new project has been added.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.ProjectRemoved">
            <summary>
            An existing project has been removed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.BuildQueueAdded">
            <summary>
            A new build queue has been added.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.BuildQueueRemoved">
            <summary>
            An existing build queue has been removed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.PropertyChanged">
            <summary>
            A property has been changed on this project.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.Monitor.Server.LoginChanged">
            <summary>
            The login status for the underlying client has changed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs">
            <summary>
            The arguments for a server update.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs.#ctor(ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs"/>.
            </summary>
            <param name="snapshot">The current snapshot.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs.#ctor(System.Exception)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs"/>.
            </summary>
            <param name="error">The error details.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs.Snapshot">
            <summary>
            The snapshot of the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Monitor.ServerUpdateArgs.Exception">
            <summary>
            The exception details for this update. 
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.NameValuePairListSerialiserFactory">
            <summary>
            Generate a serialiser for deserialising a list of name/value pairs.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairListSerialiserFactory.Create(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>
            Create the serialiser.
            </summary>
            <param name="memberInfo"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClient">
            <summary>
            A client connection to a remote CruiseControl.Net server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.#ctor(ThoughtWorks.CruiseControl.Remote.IServerConnection)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClient"/>.
            </summary>
            <param name="connection">The client connection to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetProjectStatus">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ForceBuild(System.String)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="projectName">project to force</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ForceBuild(System.String,System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Forces a build for the named project with some parameters.
            </summary>
            <param name="projectName">project to force</param>
            <param name="parameters"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.AbortBuild(System.String)">
            <summary>
            Attempts to abort a current project build.
            </summary>
            <param name="projectName">The name of the project to abort.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Request(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationRequest)">
            <summary>
            Sends a build request to the server.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="integrationRequest"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.StartProject(System.String)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.StopProject(System.String)">
            <summary>
            Stop project.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Message)">
            <summary>
            Sends a message for a project.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="message"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.WaitForExit(System.String)">
            <summary>
            Waits for a project to stop.
            </summary>
            <param name="projectName">The name of the project to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.CancelPendingRequest(System.String)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetCruiseServerSnapshot">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetLatestBuildName(System.String)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetBuildNames(System.String)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetMostRecentBuildNames(System.String,System.Int32)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetLog(System.String,System.String,System.Boolean)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
            <param name="projectName">Name of the project.</param>
            <param name="buildName">Name of the build.</param>
            <param name="compress">If set to <c>true</c> the log will be compressed.</param>
            <returns>The log file for the build.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetServerLog">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetServerLog(System.String)">
            <summary>
            Returns a log of recent build server activity for a specific project. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetServerVersion">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.AddProject(System.String)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.DeleteProject(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetProject(System.String)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.UpdateProject(System.String,System.String)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetExternalLinks(System.String)">
            <summary>
            Retrieves any external links.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetArtifactDirectory(System.String)">
            <summary>
            Retrieves the name of the artifact directory.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetStatisticsDocument(System.String)">
            <summary>
            Retrieves the statistics document.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetModificationHistoryDocument(System.String)">
            <summary>
            Retrieves a document containing the history of all the changes.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetRSSFeed(System.String)">
            <summary>
            Retrieves the RSS feed URL.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Login(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Logs a user into the session and generates a session.
            </summary>
            <returns>True if the request is successful, false otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Logout">
            <summary>
            Logs a user out of the system and removes their session.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetSecurityConfiguration">
            <summary>
            Retrieves the security configuration.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ListUsers">
            <summary>
            Lists all the users who have been defined in the system.
            </summary>
            <returns>
            A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/> containing the details on all the users
            who have been defined.
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.DiagnoseSecurityPermissions(System.String,System.String[])">
            <summary>
            Checks the security permissions for a user against one or more projects.
            </summary>
            <returns>A set of diagnostics information.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ReadAuditRecords(System.Int32,System.Int32)">
            <summary>
            Reads the specified number of audit events.
            </summary>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ReadAuditRecords(System.Int32,System.Int32,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Reads the specified number of filtered audit events.
            </summary>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ListBuildParameters(System.String)">
            <summary>
            Lists the build parameters for a project.
            </summary>
            <param name="projectName">The name of the project to retrieve the parameters for.</param>
            <returns>The list of parameters (if any).</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ChangePassword(System.String,System.String)">
            <summary>
            Changes the password of the user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ResetPassword(System.String,System.String)">
            <summary>
            Resets the password for a user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.TakeStatusSnapshot(System.String)">
            <summary>
            Takes a snapshot of the current project status.
            </summary>
            <param name="projectName">The name of the project.</param>
            <returns>The current status snapshot.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.RetrievePackageList(System.String)">
            <summary>
            Retrieves the current list of packages for a project.
            </summary>
            <param name="projectName">The name of the project.</param>
            <returns>The currently available packages.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.RetrieveFileTransfer(System.String,System.String)">
            <summary>
            Retrieves a file transfer instance.
            </summary>
            <param name="projectName">The name of the project.</param>
            <param name="fileName">The name of the file.</param>
            <returns>The file transfer instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetFreeDiskSpace">
            <summary>
            Retrieve the amount of free disk space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GetLinkedSiteId(System.String,System.String)">
            <summary>
            Retrieve the identifer for this project on a linked site.
            </summary>
            <param name="projectName"></param>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ProcessMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Processes a message.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message.</param>
            <returns>The response message.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ProcessMessage(System.String,System.String)">
            <summary>
            Processes a message.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message in an XML format.</param>
            <returns>The response message in an XML format.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Dispose">
            <summary>
            Disposes the .NET remoting client.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ListServers">
            <summary>
            Lists the servers that this client connection exposes.
            </summary>
            <returns>The list of available servers.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GenerateServerRequest">
            <summary>
            Generates a server request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.GenerateProjectRequest(System.String)">
            <summary>
            Generates a project request.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.ValidateResponse(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Validates the response from the server.
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.TargetServer">
            <summary>
            The server that will be targeted by all messages.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.IsBusy">
            <summary>
            Is this client busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Connection">
            <summary>
            The underlying connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClient.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory">
            <summary>
            Factory class for building <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instances.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.#ctor">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/>. The transport protocol will be
            detected from the address.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateHttpClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateHttpClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateHttpClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateHttpClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            HTTP to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateRemotingClient(System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting.
            </summary>
            <param name="address">The address of the server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateRemotingClient(System.String,System.String)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateRemotingClient(System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.GenerateRemotingClient(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Generates an instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> that connects via
            .NET Remoting to another server.
            </summary>
            <param name="address">The address of the server.</param>
            <param name="targetServer">The name of the other server.</param>
            <param name="settings">The start-up settings to use.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientBase"/> instance.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.InitialiseDefaultHttpClient">
            <summary>
            Initialise the default HTTP client (via Web Dashboard).
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.InitialiseDefaultTcpClient">
            <summary>
            Initialise the default TCP client (via .NET Remoting).
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.AddInitialiser(System.String,ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.ClientInitialiser)">
            <summary>
            Adds a transport initialiser.
            </summary>
            <param name="transport">The transport to initialise.</param>
            <param name="initialiser">The new initialiser.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.BuildUpConnection(ThoughtWorks.CruiseControl.Remote.IServerConnection,ThoughtWorks.CruiseControl.Remote.ClientStartUpSettings)">
            <summary>
            Builds a server connection based on the start-up options.
            </summary>
            <param name="connection"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.ResetCache">
            <summary>
            Resets the entire client cache.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.ResetCache(System.String)">
            <summary>
            Resets the cache for a client address.
            </summary>
            <param name="address">The address to reset.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.UseClientCaching">
            <summary>
            Should the clients be cached.
            </summary>
            <remarks>
            If the clients are cached, then attempting to generate a client for a duplicate address
            will return the same client. If caching is off, then a new client will be returned
            everytime.
            </remarks>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerClientFactory.ClientInitialiser">
            <summary>
            Initialises a client.
            </summary>
            <param name="address"></param>
            <param name="settings"></param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient">
            <summary>
            A client connection to an old (pre-1.5) version of CruiseControl.NET via .NET Remoting.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient"/>.
            </summary>
            <param name="serverAddress">The address of the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetProjectStatus">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.ForceBuild(System.String)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="projectName">project to force</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.ForceBuild(System.String,System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Forces a build for the named project with some parameters.
            </summary>
            <param name="projectName">project to force</param>
            <param name="parameters"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.AbortBuild(System.String)">
            <summary>
            Attempts to abort a current project build.
            </summary>
            <param name="projectName">The name of the project to abort.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.Request(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationRequest)">
            <summary>
            Sends a build request to the server.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="integrationRequest"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.StartProject(System.String)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.StopProject(System.String)">
            <summary>
            Stop project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Message)">
            <summary>
            Sends a message for a project.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <param name="message"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.WaitForExit(System.String)">
            <summary>
            Waits for a project to stop.
            </summary>
            <param name="projectName">The name of the project to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.CancelPendingRequest(System.String)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetCruiseServerSnapshot">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetLatestBuildName(System.String)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetBuildNames(System.String)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetMostRecentBuildNames(System.String,System.Int32)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetLog(System.String,System.String,System.Boolean)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
            <param name="projectName">Name of the project.</param>
            <param name="buildName">Name of the build.</param>
            <param name="compress">If set to <c>true</c> the log will be compressed.</param>
            <returns>The log file for the build.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetServerLog">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetServerLog(System.String)">
            <summary>
            Returns a log of recent build server activity for a specific project. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetServerVersion">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.AddProject(System.String)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.DeleteProject(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetProject(System.String)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.UpdateProject(System.String,System.String)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetExternalLinks(System.String)">
            <summary>
            Retrieves any external links.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetArtifactDirectory(System.String)">
            <summary>
            Retrieves the name of the artifact directory.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetStatisticsDocument(System.String)">
            <summary>
            Retrieves the statistics document.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetModificationHistoryDocument(System.String)">
            <summary>
            Retrieves a document containing the history of all the changes.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.GetRSSFeed(System.String)">
            <summary>
            Retrieves the RSS feed URL.
            </summary>
            <param name="projectName">The name of the project to use.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.RetrieveFileTransfer(System.String,System.String)">
            <summary>
            Retrieves a file transfer instance.
            </summary>
            <param name="projectName">The name of the project.</param>
            <param name="fileName">The name of the file.</param>
            <returns>The file transfer instance.</returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.TargetServer">
            <summary>
            The server that will be targeted by all messages.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.IsBusy">
            <summary>
            Is this client busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerRemotingClient.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.IntegrationCompletedEventArgs">
            <summary>
            The event arguments for when an integration is attempting to start.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs">
            <summary>
            Event args for a project-based event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs.#ctor(System.String)">
            <summary>
            Start a new set of event args for a project.
            </summary>
            <param name="projectName">The name of the project this event is for.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs.ProjectName">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.IntegrationCompletedEventArgs.#ctor(ThoughtWorks.CruiseControl.Remote.IntegrationRequest,System.String,ThoughtWorks.CruiseControl.Remote.IntegrationStatus)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Events.IntegrationCompletedEventArgs"/>.
            </summary>
            <param name="request">The request to process.</param>
            <param name="projectName"></param>
            <param name="status"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.IntegrationCompletedEventArgs.Request">
            <summary>
            The integration request.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.IntegrationCompletedEventArgs.Status">
            <summary>
            The status of the request.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.HttpConnection">
            <summary>
            A server connection over HTTP.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.HttpConnection"/> to a remote server.
            </summary>
            <param name="serverAddress">The address of the remote server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.#ctor(System.Uri)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.HttpConnection"/> to a remote server.
            </summary>
            <param name="serverAddress">The address of the remote server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message via HTTP.
            </summary>
            <param name="action"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest,System.Object)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <param name="userState">Any user state data.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.CancelAsync">
            <summary>
            Cancels an asynchronous operation.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.CancelAsync(System.Object)">
            <summary>
            Cancels an asynchronous operation.
            </summary>
            <param name="userState"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.Dispose">
            <summary>
            Disposes the .NET remoting client.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.CompleteAsyncCall(System.Object)">
            <summary>
            Tidies up from an asynchronous call.
            </summary>
            <param name="userState">The user state that was passed in.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.HttpConnection.GenerateTargetUri(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Generates the target URI.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.HttpConnection.Type">
            <summary>
            The type of connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.HttpConnection.ServerName">
            <summary>
            The name of the server that this connection is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.HttpConnection.IsBusy">
            <summary>
            Is this connection busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.HttpConnection.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.HttpConnection.SendMessageCompleted">
            <summary>
            A SendMessageAsync has completed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ICruiseManager">
            <remarks>
            Remote Interface to CruiseControl.NET.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetProjectStatus">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.ForceBuild(System.String,System.String)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="projectName">project to force</param>
            <param name="enforcerName">ID of trigger/action forcing the build</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.AbortBuild(System.String,System.String)">
            <summary>
            Abort a build.
            </summary>
            <param name="projectName"></param>
            <param name="enforcerName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.Request(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationRequest)">
            <summary>
            Send a build request.
            </summary>
            <param name="projectName"></param>
            <param name="integrationRequest"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.Start(System.String)">
            <summary>
            Start a project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.Stop(System.String)">
            <summary>
            Stop a project.
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Message)">
            <summary>
            Send a project message.
            </summary>
            <param name="projectName"></param>
            <param name="message"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.WaitForExit(System.String)">
            <summary>
            Wait for the project to exit.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.CancelPendingRequest(System.String)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetCruiseServerSnapshot">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetLatestBuildName(System.String)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetBuildNames(System.String)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetMostRecentBuildNames(System.String,System.Int32)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetLog(System.String,System.String)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetServerLog">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetServerLog(System.String)">
            <summary>
            Returns a log of recent build server activity for a specific project. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetServerVersion">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.AddProject(System.String)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.DeleteProject(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetProject(System.String)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.UpdateProject(System.String,System.String)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetExternalLinks(System.String)">
            <summary>
            Get the external links.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetArtifactDirectory(System.String)">
            <summary>
            get the artefact directory.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetStatisticsDocument(System.String)">
            <summary>
            get the statistics document.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetModificationHistoryDocument(System.String)">
            <summary>
            Get the modification history document.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetRSSFeed(System.String)">
            <summary>
            Get the RSS feed.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.GetFreeDiskSpace">
            <summary>
            Retrieve the amount of free disk space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManager.RetrieveFileTransfer(System.String,System.String)">
            <summary>
            Retrieve a file transfer object.
            </summary>
            <param name="project">The project to retrieve the file for.</param>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.IMessageProcessor">
            <summary>
            Processes messages from a client.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IMessageProcessor.ProcessMessage(System.String,System.String)">
            <summary>
            Processes a message in an XML format.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message in an XML format.</param>
            <returns>The response message in an XML format.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IMessageProcessor.ProcessMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Processes a message.
            </summary>
            <param name="action">The action to use.</param>
            <param name="message">The request message.</param>
            <returns>The response message.</returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser">
            <summary>
            Serialise/deserialise a name/value pair.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.#ctor(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute,System.Boolean)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser"/>.
            </summary>
            <param name="info"></param>
            <param name="attribute"></param>
            <param name="isList"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.Read(System.Xml.XmlNode,Exortech.NetReflector.NetReflectorTypeTable)">
            <summary>
            Read a node.
            </summary>
            <param name="node"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.Write(System.Xml.XmlWriter,System.Object)">
            <summary>
            Write a node.
            </summary>
            <param name="writer"></param>
            <param name="target"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.ReadList(System.Xml.XmlNode)">
            <summary>
            Read a list from a node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.ReadValue(System.Xml.XmlElement)">
            <summary>
            Reads a value.
            </summary>
            <param name="valueElement"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiser.WriteValue(System.Xml.XmlWriter,ThoughtWorks.CruiseControl.Remote.NameValuePair,System.String)">
            <summary>
            Writes a value.
            </summary>
            <param name="writer"></param>
            <param name="elementName"></param>
            <param name="value"></param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiserFactory">
            <summary>
            Generate a serialiser for deserialising name/value pairs.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePairSerialiserFactory.Create(Exortech.NetReflector.Util.ReflectorMember,Exortech.NetReflector.ReflectorPropertyAttribute)">
            <summary>
            Create the serialiser.
            </summary>
            <param name="memberInfo"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.MessageReceivedEventArgs">
            <summary>
            A message has been received.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.MessageReceivedEventArgs.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.MessageReceivedEventArgs"/>.
            </summary>
            <param name="response"></param>
            <param name="error"></param>
            <param name="cancelled"></param>
            <param name="userState"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.MessageReceivedEventArgs.Response">
            <summary>
            The response message.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest">
            <summary>
            A message for requesting an integration.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.AddBuildValue(System.String,System.String)">
            <summary>
            Adds a new build value.
            </summary>
            <param name="name">The name of the build value.</param>
            <param name="value">The value of the build value.</param>
            <returns>The new build value.</returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.BuildCondition">
            <summary>
            The type of build condition.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.BuildIntegrationRequest.BuildValues">
            <summary>
            The values to pass into the build.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse">
            <summary>
            The response containing build parameters.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.BuildParametersResponse.Parameters">
            <summary>
            The parameters.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest">
            <summary>
            A change password request message.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest.OldPassword">
            <summary>
            The old password
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest.NewPassword">
            <summary>
            The new password
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest.UserName">
            <summary>
            The user name.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest">
            <summary>
            The request to change the configuration.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.ProjectDefinition">
            <summary>
            The XML serialisation of the project definition.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.PurgeWorkingDirectory">
            <summary>
            Whether to purge the working directory or not.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.PurgeArtifactDirectory">
            <summary>
            Whether to purge the artifact directory or not.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest.PurgeSourceControlEnvironment">
            <summary>
            Whether to purge the source control environment or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse">
            <summary>
            The response containing a file transfer instance.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferResponse.FileTransfer">
            <summary>
            The file transfer instance.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest">
            <summary>
            A message for requesting a file transfer instance from the server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest"/> with all the properties.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The project to retrieve the file from.</param>
            <param name="fileName">The name of the file to retrieve.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest.FileName">
            <summary>
            The name of the file to retrieve.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage">
            <summary>
            An error message to return in a response.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage.#ctor">
            <summary>
            Initialises a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage"/> with a message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage.#ctor(System.String,System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage"/> with a message and a type.
            </summary>
            <param name="message"></param>
            <param name="type"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage.Type">
            <summary>
            The type of error.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ErrorMessage.Message">
            <summary>
            The error message text.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse">
            <summary>
            The response containing package details.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ListPackagesResponse.Packages">
            <summary>
            The packages.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse">
            <summary>
            The response containing a server snapshot.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.SnapshotResponse.Snapshot">
            <summary>
            The snapshot package.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse">
            <summary>
            The response containing a list of external links.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ExternalLinksListResponse.ExternalLinks">
            <summary>
            The external links.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse">
            <summary>
            The response containing a list of generic data.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.DataListResponse.Data">
            <summary>
            The data package.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityRequest">
            <summary>
            A request message for security diagnostics.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityRequest.Projects">
            <summary>
            The projects to diagnose.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityRequest.UserName">
            <summary>
            The user name.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse">
            <summary>
            The response containing a list of security diagnostics.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityResponse.Diagnostics">
            <summary>
            The diagnostics.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest">
            <summary>
            A request to list the builds for a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest.NumberOfBuilds">
            <summary>
            The number of builds to list.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest">
            <summary>
            The base level message for all build-related requests.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/> with a session token.
            </summary>
            <param name="sessionToken">The session token to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest"/> with a session token and project name.
            </summary>
            <param name="sessionToken">The session token to use.</param>
            <param name="projectName">The name of the project.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest.BuildName">
            <summary>
            The name of the build to retrieve the log for.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse">
            <summary>
            The response containing the status of the projects.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ProjectStatusResponse.Projects">
            <summary>
            The projects.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse">
            <summary>
            The response containing user details.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse.Users">
            <summary>
            The users.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse">
            <summary>
            The response containing generic data.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.DataResponse.Data">
            <summary>
            The data package.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest">
            <summary>
            A login request  message.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.UserNameCredential">
            <summary>
            The credential name for a user name.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.PasswordCredential">
            <summary>
            The credential name for a password.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.TypeCredential">
            <summary>
            The credential name for a type.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.DomainCredential">
            <summary>
            The credential name for a domain.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.#ctor">
            <summary>
            Initialise a new empty <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest"/> with a user name.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.AddCredential(System.String,System.String)">
            <summary>
            Adds a new credential.
            </summary>
            <param name="name">The name of the credential.</param>
            <param name="value">The value of the credential.</param>
            <returns>The new credential.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.FindCredential(System.String)">
            <summary>
            Attempts to find a credential.
            </summary>
            <param name="credential"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest.Credentials">
            <summary>
            The credentials to use in logging in.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse">
            <summary>
            The response from a login request.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.LoginResponse.SessionToken">
            <summary>
            The token for the new session.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.MessageRequest">
            <summary>
            A message for passing a message to the server.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.MessageRequest.Message">
            <summary>
            The message being passed.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.MessageRequest.Kind">
            <summary>
            The kind of message
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest">
            <summary>
            A request message for reading the audit log.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest.StartRecord">
            <summary>
            The starting record number.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest.NumberOfRecords">
            <summary>
            The number of records to read.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest.Filter">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse">
            <summary>
            The response containing a list of audit records.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditResponse.Records">
            <summary>
            The audit records.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.ResponseResult">
            <summary>
            The result code for a response.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.ResponseResult.Success">
            <summary>
            The server processed the request without any problems.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.ResponseResult.Failure">
            <summary>
            The server encountered an error while processing and was unable to complete the request.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.ResponseResult.Warning">
            <summary>
            The server encountered a problem while processing but was still able to complete the request.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Messages.ResponseResult.Unknown">
            <summary>
            The result code is unknown (has not been set yet.)
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse">
            <summary>
            The response containing a status snapshot.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse.#ctor">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse"/> from a request.
            </summary>
            <param name="request">The request to use.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse.#ctor(ThoughtWorks.CruiseControl.Remote.Messages.Response)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse"/> from a response.
            </summary>
            <param name="response">The response to use.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Messages.StatusSnapshotResponse.Snapshot">
            <summary>
            The snapshot.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter">
            <title>Date Parameter</title>
            <version>1.5</version>
            <summary>
            <para>
            This will prompt the user to enter a date value when a force build is requested.
            </para>
            <para>
            This parameter can then be used by a dynamic value in a task.
            </para>
            </summary>
            <example>
            <code title="Minimalist example">
            &lt;dateParameter&gt;
            &lt;name&gt;CutOffDate&lt;/name&gt;
            &lt;/dateParameter&gt;
            </code>
            <code title="Full example">
            &lt;dateParameter&gt;
            &lt;name&gt;CutOffDate&lt;/name&gt;
            &lt;display&gt;Cut Off Date&lt;/display&gt;
            &lt;description&gt;What is the cut-off date for changes?&lt;/description&gt;
            &lt;default&gt;today&lt;/default&gt;
            &lt;minimum&gt;1-Jan-2000&lt;/minimum&gt;
            &lt;maximum&gt;31-Dec-2100&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/dateParameter&gt;
            </code>
            <code title="Example in Context">
            &lt;project name="Test Project"&gt;
            &lt;sourcecontrol type="svn"&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/sourcecontrol&gt;
            &lt;triggers&gt;
            &lt;intervalTrigger /&gt;
            &lt;/triggers&gt;
            &lt;tasks&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/tasks&gt;
            &lt;publishers&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/publishers&gt;
            &lt;parameters&gt;
            &lt;dateParameter&gt;
            &lt;name&gt;CutOffDate&lt;/name&gt;
            &lt;display&gt;Cut Off Date&lt;/display&gt;
            &lt;description&gt;What is the cut-off date for changes?&lt;/description&gt;
            &lt;default&gt;today&lt;/default&gt;
            &lt;minimum&gt;1-Jan-2000&lt;/minimum&gt;
            &lt;maximum&gt;31-Dec-2100&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/dateParameter&gt;
            &lt;/parameters&gt;
            &lt;/project&gt;
            </code>
            </example>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase">
            <summary>
            Abstract base class for parameters.
            </summary>
            <title>Parameters</title>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.Convert(System.String)">
            <summary>
            Converts the parameter into the value to use.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The value to use.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.GenerateClientDefault">
            <summary>
            Updates the client default value.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.GenerateException(System.String,System.Object[])">
            <summary>
            Generates a validation exception.
            </summary>
            <param name="message"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.Name">
            <summary>
            The name of the parameter.
            </summary>
            <version>1.5</version>
            <default>n/a</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.DisplayName">
            <summary>
            The display name of the parameter.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.Description">
            <summary>
            The description of the parameter.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.DefaultValue">
            <summary>
            The default value to use.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.ClientDefaultValue">
            <summary>
            The default value for the clients to use.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.ParameterBase.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.GenerateClientDefault">
            <summary>
            Updates the client default value.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.Convert(System.String)">
            <summary>
            Converts the parameter into the value to use.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The value to use.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.SetClientDefault">
            <summary>
            Sets the client default value.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.MinimumValue">
            <summary>
            The mimimum allowed value of the parameter.
            </summary>
            <version>1.5</version>
            <default>1-Jan-0000</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.MaximumValue">
            <summary>
            The maximum allowed value of the parameter.
            </summary>
            <version>1.5</version>
            <default>31-Dev-9999</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.IsRequired">
            <summary>
            Is the parameter required?
            </summary>
            <version>1.5</version>
            <default>false</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.DateParameter.ClientDefaultValue">
            <summary>
            The default value for the clients to use.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter">
            <title>Boolean Parameter</title>
            <version>1.5</version>
            <summary>
            <para>
            This will prompt the user to enter a boolean value when a force build is requested.
            </para>
            <para>
            This parameter can then be used by a dynamic value in a task.
            </para>
            </summary>
            <example>
            <code title="Minimalist example">
            &lt;booleanParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;true&gt;Yes&lt;/true&gt;
            &lt;false&gt;No&lt;/false&gt;
            &lt;/booleanParameter&gt;
            </code>
            <code title="Full example">
            &lt;booleanParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;true name="PROD"&gt;Yes&lt;/true&gt;
            &lt;false name="DEV"&gt;No&lt;/false&gt;
            &lt;display&gt;Production Build&lt;/display&gt;
            &lt;description&gt;Do you want to generate a production build?&lt;/description&gt;
            &lt;default&gt;DEV&lt;/default&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/booleanParameter&gt;
            </code>
            <code title="Example in Context">
            &lt;project name="Test Project"&gt;
            &lt;sourcecontrol type="svn"&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/sourcecontrol&gt;
            &lt;triggers&gt;
            &lt;intervalTrigger /&gt;
            &lt;/triggers&gt;
            &lt;tasks&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/tasks&gt;
            &lt;publishers&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/publishers&gt;
            &lt;parameters&gt;
            &lt;booleanParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;true name="PROD"&gt;Yes&lt;/true&gt;
            &lt;false name="DEV"&gt;No&lt;/false&gt;
            &lt;display&gt;Production Build&lt;/display&gt;
            &lt;description&gt;Do you want to generate a production build?&lt;/description&gt;
            &lt;default&gt;DEV&lt;/default&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/booleanParameter&gt;
            &lt;/parameters&gt;
            &lt;/project&gt;
            </code>
            </example>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.Convert(System.String)">
            <summary>
            Converts the parameter into the value to use.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The value to use.</returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.IsRequired">
            <summary>
            Is the parameter required?
            </summary>
            <version>1.5</version>
            <default>false</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.TrueValue">
            <summary>
            The value to use when the parameter is true. If the name attribute is set, then the user will see that as
            the selection value. Otherwise the actual value will be displayed.
            </summary>
            <version>1.5</version>
            <default>n/a</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.FalseValue">
            <summary>
            The value to use when the parameter is false. If the name attribute is set, then the user will see that
            as the selection value. Otherwise the actual value will be displayed.
            </summary>
            <version>1.5</version>
            <default>n/a</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.BooleanParameter.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ProjectStatusSnapshot">
            <summary>
            Defines the status of a project.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ItemStatus">
            <summary>
            Defines the status on an item.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.ItemStatus"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.ItemStatus"/> with a name.
            </summary>
            <param name="name">The name of the item.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.AddChild(ThoughtWorks.CruiseControl.Remote.ItemStatus)">
            <summary>
            Adds a child and correctly links it.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.Clone">
            <summary>
            Generates a clone of this status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.CopyTo(ThoughtWorks.CruiseControl.Remote.ItemStatus)">
            <summary>
            Copies this item to another.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.GetHashCode">
            <summary>
            Gets the hash code for the status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.Equals(System.Object)">
            <summary>
            Checks if two statuses are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ItemStatus.ToString">
            <summary>
            Returns an XML representation of the status.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Identifier">
            <summary>
            The unique identifier of the item.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Name">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Description">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Error">
            <summary>
            Any error message for why the item failed.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Status">
            <summary>
            The status of the item.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.TimeStarted">
            <summary>
            The date and time the item started building.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.TimeCompleted">
            <summary>
            The date and time the item completed building.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.TimeOfEstimatedCompletion">
            <summary>
            The date and time the item is estimated to complete building.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.ChildItems">
            <summary>
            Any child status items.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ItemStatus.Parent">
            <summary>
            The parent of this item.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectStatusSnapshot.Clone">
            <summary>
            Generates a clone of this snapshot.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatusSnapshot.TimeOfSnapshot">
            <summary>
            The date and time this snapshot was taken.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshotList">
            <summary>
            An enumerable list of the contents of a particular integration queue as stored in the snapshot.
            </summary>
            <remarks>
            This class is required for backwards compatibility with 1.4.4 or earlier versions.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshotList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshotList"/> class.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshotList.GetEnumerator">
            <summary>
            Get the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.QueueSnapshotList">
            <summary>
            An enumerable list of named integration queues as stored in the snapshot.
            </summary>
            <remarks>
            This class is required for backwards compatibility with 1.4.4 or earlier versions.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSnapshotList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThoughtWorks.CruiseControl.Remote.QueueSnapshotList"/> class.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSnapshotList.GetEnumerator">
            <summary>
            Get the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.RemotingConnection">
            <summary>
            A server connection using .NET remoting.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.RemotingConnection"/> to a remote server.
            </summary>
            <param name="serverAddress">The address of the remote server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.#ctor(System.Uri)">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.RemotingConnection"/> to a remote server.
            </summary>
            <param name="serverAddress">The address of the remote server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.SendMessage(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message via HTTP.
            </summary>
            <param name="action"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.SendMessageAsync(System.String,ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest,System.Object)">
            <summary>
            Sends a message to a remote server asychronously.
            </summary>
            <param name="action">The action to perform.</param>
            <param name="request">The request to send to the server.</param>
            <param name="userState">Any user state data.</param>
            <remarks>
            This operation will still be done in a synchronous mode.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.CancelAsync">
            <summary>
            Cancels an asynchronous operation.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.CancelAsync(System.Object)">
            <summary>
            Cancels an asynchronous operation.
            </summary>
            <param name="userState"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.Dispose">
            <summary>
            Disposes the .NET remoting client.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingConnection.InitialiseRemoting">
            <summary>
            Initialises the client connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.RemotingConnection.Type">
            <summary>
            The type of connection.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.RemotingConnection.ServerName">
            <summary>
            The name of the server that this connection is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.RemotingConnection.IsBusy">
            <summary>
            Is this connection busy performing an operation.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.RemotingConnection.Address">
            <summary>
            The address of the client.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.RemotingConnection.SendMessageCompleted">
            <summary>
            A SendMessageAsync has completed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase">
            <summary>
            A base class that provides some common audit filtering.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.#ctor">
            <summary>
            Starts a new blank filter.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.#ctor(ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with an inner filter.
            </summary>
            <param name="inner">The inner filter.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.CheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks whether the record should be included in the filter.
            </summary>
            <param name="record">The record to check.</param>
            <returns>True to include the record, false otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.ByProject(System.String)">
            <summary>
            Filters by project.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.ByUser(System.String)">
            <summary>
            Filters by user.
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.ByEventType(ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent)">
            <summary>
            Filters by event type.
            </summary>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.ByRight(ThoughtWorks.CruiseControl.Remote.Security.SecurityRight)">
            <summary>
            Filters by security right.
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.ByDateRange(System.DateTime,System.DateTime)">
            <summary>
            Filters by date range.
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks whether the record should be included in the filter.
            </summary>
            <param name="record">The record to check.</param>
            <returns>True to include the record, false otherwise.</returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Core.CruiseControlException">
            <summary>
            Base cruiseControl specific exception, inheriting from <see cref="T:System.ApplicationException"/>.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.BuildCondition">
            <summary>
            Enumeration containing possible conditions for the execution of the
            build phase of project integration.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.BuildCondition.NoBuild">
            <summary>
            A build should not occur.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.BuildCondition.IfModificationExists">
            <summary>
            A build should occur only if modifications exist.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.BuildCondition.ForceBuild">
            <summary>
            A build should be forced, regardless of whether
            modifications exist or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseControlStatus">
            <remarks>
            Enumeration of possible states for the CruiseControl.NET server.
            </remarks>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.CruiseControlStatus.Stopped">
            <summary>
            The server is not running.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.CruiseControlStatus.Running">
            <summary>
            The server is running.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.CruiseControlStatus.WillBeStopped">
            <summary>
            The server is scheduled to be stopped.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.CruiseControlStatus.Unknown">
            <summary>
            The server's state is unknown.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot">
            <summary>
            Contains a snapshot of the current CC.Net server status and activity.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.#ctor(ThoughtWorks.CruiseControl.Remote.ProjectStatus[],ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot"/>.
            </summary>
            <param name="projectStatuses"></param>
            <param name="queueSetSnapshot"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.IsQueueSetSnapshotChanged(ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot)">
            <summary>
            Checks if a snapshot has changed.
            </summary>
            <param name="queueSetSnapshotToCompare"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.GetProjectStatus(System.String)">
            <summary>
            Retrieves the status of a project.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.GetHashCode">
            <summary>
            Retrieves the hashcode for the snapshot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.Equals(System.Object)">
            <summary>
            Compares two snapshots to see if they are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.ProjectStatuses">
            <summary>
            The current state of the projects.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.CruiseServerSnapshot.QueueSetSnapshot">
            <summary>
            The current state of the queues.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs">
            <summary>
            Event args for allowing a project-based event to be canceled.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs.#ctor(System.String)">
            <summary>
            Start a new set of event args for a project.
            </summary>
            <param name="projectName">The name of the project this event is for.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs.Cancel">
            <summary>
            Whether the event should be canceled or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs`1">
            <summary>
            Event args for allowing a project-based event to be canceled.
            </summary>
            <typeparam name="TData">The type of extra data to pass.</typeparam>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs`1">
            <summary>
            Event args for a project-based event.
            </summary>
            <typeparam name="TData">The type of extra data to pass.</typeparam>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs`1.#ctor(System.String,`0)">
            <summary>
            Start a new set of event args for a project with data.
            </summary>
            <param name="projectName">The name of the project this event is for.</param>
            <param name="data">The data to pass.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs`1.ProjectName">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.ProjectEventArgs`1.Data">
            <summary>
            Any extra data for this event.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs`1.#ctor(System.String,`0)">
            <summary>
            Start a new set of event args for a project with data.
            </summary>
            <param name="projectName">The name of the project this event is for.</param>
            <param name="data">The data to pass.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.CancelProjectEventArgs`1.Cancel">
            <summary>
            Whether the event should be canceled or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs">
            <summary>
            The event arguments for when an integration is attempting to start.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.#ctor(ThoughtWorks.CruiseControl.Remote.IntegrationRequest,System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs"/>.
            </summary>
            <param name="projectName"></param>
            <param name="request">The request to process.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.Request">
            <summary>
            The integration request.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.Result">
            <summary>
            The result of the event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.EventResult">
            <summary>
            The result of the event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.EventResult.Cancel">
            <summary>
            Cancel the integration request completely.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.EventResult.Delay">
            <summary>
            Delay the integration request until cleared.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Events.IntegrationStartedEventArgs.EventResult.Continue">
            <summary>
            Continue with the integration request.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ExtensionConfiguration">
            <summary>
            Defines the configuration for a server extension.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ExtensionConfiguration.Type">
            <summary>
            Gets or sets the type of the component.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ExtensionConfiguration.Items">
            <summary>
            Gets or sets the additional items.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ExternalLink">
            <title>External Links</title>
            <version>1.0</version>
            <summary>
            The &lt;externalLinks&gt; section can contain any number of &lt;externalLink&gt; sub-sections. Each of these 
            are used to display project related links on the project report page of the Web Dashboard, and are meant as a
            convenient shortcut to project-related web sites outside of CruiseControl.NET.
            </summary>
            <example>
            <code>
            &lt;externalLinks&gt;
            &lt;externalLink name="My Link" url="http://somewhere" /&gt;
            &lt;/externalLinks&gt;
            </code>
            </example>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ExternalLink.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.ExternalLink"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ExternalLink.#ctor(System.String,System.String)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.ExternalLink"/>.
            </summary>
            <param name="name"></param>
            <param name="url"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ExternalLink.Name">
            <summary>
            The name of the link.
            </summary>
            <version>1.0</version>
            <default>n/a</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ExternalLink.Url">
            <summary>
            The URL for the link.
            </summary>
            <version>1.0</version>
            <default>n/a</default>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient">
            <remarks>
            Remote Interface to CruiseControl.NET.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetProjectStatus(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.Start(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.Stop(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Attempts to stop a project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ForceBuild(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.AbortBuild(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Aborts the build of the selected project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.CancelPendingRequest(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.SendMessage(ThoughtWorks.CruiseControl.Remote.Messages.MessageRequest)">
            <summary>
            Send a text message to the server.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.WaitForExit(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Waits for the project to exit.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetCruiseServerSnapshot(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetLatestBuildName(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetBuildNames(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetMostRecentBuildNames(ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetLog(ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetServerLog(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetServerVersion(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.AddProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.DeleteProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.UpdateProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetProject(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.Login(ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest)">
            <summary>
            Logs a user into the session and generates a session.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.Logout(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Logs a user out of the system and removes their session.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetSecurityConfiguration(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Retrieves the security configuration.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ListUsers(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Lists all the users who have been defined in the system.
            </summary>
            <param name="request"></param>
            <returns>
            A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse"/> containing the details on all the users
            who have been defined.
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.DiagnoseSecurityPermissions(ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityRequest)">
            <summary>
            Checks the security permissions for a user against one or more projects.
            </summary>
            <param name="request"></param>
            <returns>A set of diagnostics information.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ReadAuditRecords(ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest)">
            <summary>
            Reads the specified number of filtered audit events.
            </summary>
            <param name="request"></param>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ListBuildParameters(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Lists the build parameters for a project.
            </summary>
            <param name="request">The project to retrieve the parameters for.</param>
            <returns>The list of parameters (if any).</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ChangePassword(ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest)">
            <summary>
            Changes the password of the user.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.ResetPassword(ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest)">
            <summary>
            Resets the password for a user.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetFreeDiskSpace(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Retrieve the amount of free disk space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.TakeStatusSnapshot(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Takes a status snapshot of a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.RetrievePackageList(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieves a list of packages for a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.RetrieveFileTransfer(ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest)">
            <summary>
            Retrieve a file transfer object.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.GetLinkedSiteId(ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest)">
            <summary>
            Retrieve the identifer for this project on a linked site.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.RetrievePublicKey(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Retrieve the public key for the server.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.InitialiseSecureConnection(ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest)">
            <summary>
            Initialise a secure communications connection.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient.TerminateSecureConnection(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Terminate a secure communications connection.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseManagerFactory.GetCruiseServerClient(System.String)">
            <summary>
            Retrieve an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient"/> for communicating with
            the server via .NET remoting.
            </summary>
            <param name="url">The URL of the server.</param>
            <returns>A new <see cref="T:ThoughtWorks.CruiseControl.Remote.ICruiseServerClient"/> instance.</returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ICruiseServer">
            <summary>
            The main server for running Continuous Integration.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Abort">
            <summary>
            Terminates the CruiseControl.NET server immediately, stopping all started projects
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Start">
            <summary>
            Launches the CruiseControl.NET server and starts all project schedules it contains
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Start(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Attempts to start a project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Stop">
            <summary>
            Requests all started projects within the CruiseControl.NET server to stop
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Stop(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Attempts to stop a project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.CancelPendingRequest(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Cancel a pending project integration request from the integration queue.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.SendMessage(ThoughtWorks.CruiseControl.Remote.Messages.MessageRequest)">
            <summary>
            Send a text message to the server.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetCruiseServerSnapshot(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Gets the projects and integration queues snapshot from this server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetProjectStatus(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Gets information about the last build status, current activity and project name.
            for all projects on a cruise server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ForceBuild(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Forces a build for the named project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.AbortBuild(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Aborts the build of the selected project.
            </summary>
            <param name="request">A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest"/> containing the request details.</param>
            <returns>A <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.Response"/> containing the results of the request.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.WaitForExit">
            <summary>
            Wait for CruiseControl server to finish executing
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.WaitForExit(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Waits for the project to exit.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetLatestBuildName(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the name of the most recent build for the specified project
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetBuildNames(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the names of all builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetMostRecentBuildNames(ThoughtWorks.CruiseControl.Remote.Messages.BuildListRequest)">
            <summary>
            Returns the names of the buildCount most recent builds for the specified project, sorted s.t. the newest build is first in the array
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetLog(ThoughtWorks.CruiseControl.Remote.Messages.BuildRequest)">
            <summary>
            Returns the build log contents for requested project and build name
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetServerLog(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Returns a log of recent build server activity. How much information that is returned is configured on the build server.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetServerVersion(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Returns the version of the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.AddProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Adds a project to the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.DeleteProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Deletes the specified project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.UpdateProject(ThoughtWorks.CruiseControl.Remote.Messages.ChangeConfigurationRequest)">
            <summary>
            Updates the selected project on the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetProject(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Returns the serialized form of the requested project from the server
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetExternalLinks(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieve the list of external links for the project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetArtifactDirectory(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieves the name of directory used for storing artefacts for a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetStatisticsDocument(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieve the statistics document for a project.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetModificationHistoryDocument(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieve the modification history document for a project.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetRSSFeed(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieve the RSS feed for a project.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Login(ThoughtWorks.CruiseControl.Remote.Messages.LoginRequest)">
            <summary>
            Logs a user into the session and generates a session.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.Logout(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Logs a user out of the system and removes their session.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetSecurityConfiguration(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Retrieves the security configuration.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ListUsers(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Lists all the users who have been defined in the system.
            </summary>
            <param name="request"></param>
            <returns>
            A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ListUsersResponse"/> containing the details on all the users
            who have been defined.
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.DiagnoseSecurityPermissions(ThoughtWorks.CruiseControl.Remote.Messages.DiagnoseSecurityRequest)">
            <summary>
            Checks the security permissions for a user against one or more projects.
            </summary>
            <param name="request"></param>
            <returns>A set of diagnostics information.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ReadAuditRecords(ThoughtWorks.CruiseControl.Remote.Messages.ReadAuditRequest)">
            <summary>
            Reads the specified number of filtered audit events.
            </summary>
            <param name="request"></param>
            <returns>A list of <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord"/>s containing the audit details that match the filter.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ListBuildParameters(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
             <summary>
             Lists the build parameters for a project.
             </summary>
            <param name="request"></param>
             <returns>The list of parameters (if any).</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ChangePassword(ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest)">
            <summary>
            Changes the password of the user.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ResetPassword(ThoughtWorks.CruiseControl.Remote.Messages.ChangePasswordRequest)">
            <summary>
            Resets the password for a user.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetFreeDiskSpace(ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest)">
            <summary>
            Retrieve the amount of free disk space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.TakeStatusSnapshot(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Takes a status snapshot of a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.RetrievePackageList(ThoughtWorks.CruiseControl.Remote.Messages.ProjectRequest)">
            <summary>
            Retrieves a list of packages for a project.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.RetrieveFileTransfer(ThoughtWorks.CruiseControl.Remote.Messages.FileTransferRequest)">
            <summary>
            Retrieve a file transfer object.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.RetrieveService(System.Type)">
            <summary>
            Retrieves a service.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <returns>A valid service, if found, null otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.AddService(System.Type,System.Object)">
            <summary>
            Adds a service.
            </summary>
            <param name="serviceType">The type of service.</param>
            <param name="service">The service to add.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServer.GetLinkedSiteId(ThoughtWorks.CruiseControl.Remote.Messages.ProjectItemRequest)">
            <summary>
            Retrieve the identifer for this project on a linked site.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ICruiseServer.CruiseManager">
            <summary>
            Retrieve CruiseManager interface for the server
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ICruiseServer.CruiseServerClient">
            <summary>
            Client for communicating with the server.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ProjectStarting">
            <summary>
            A project is starting.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ProjectStarted">
            <summary>
            A project has started.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ProjectStopping">
            <summary>
            A project is stopping.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ProjectStopped">
            <summary>
            A project has stopped.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ForceBuildReceived">
            <summary>
            A force build has been received.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.ForceBuildProcessed">
            <summary>
            A force build has been processed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.AbortBuildReceived">
            <summary>
            An abort build has been received.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.AbortBuildProcessed">
            <summary>
            An abort build has been processed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.SendMessageReceived">
            <summary>
            A send message has been received.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.SendMessageProcessed">
            <summary>
            A send message has been processed.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.IntegrationStarted">
            <summary>
            A project integrator is starting an integration.
            </summary>
        </member>
        <member name="E:ThoughtWorks.CruiseControl.Remote.ICruiseServer.IntegrationCompleted">
            <summary>
            A project integrator has completed an integration.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ICruiseServerExtension">
            <summary>
            Provides an extension to ICruiseServer basic functionality.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerExtension.Initialise(ThoughtWorks.CruiseControl.Remote.ICruiseServer,ThoughtWorks.CruiseControl.Remote.ExtensionConfiguration)">
            <summary>
            Initialises the extension.
            </summary>
            <param name="server">The server that this extension is for.</param>
            <param name="extensionConfig"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerExtension.Start">
            <summary>
            Starts the extension.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerExtension.Stop">
            <summary>
            Stops the extension.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ICruiseServerExtension.Abort">
            <summary>
            Terminates the extension immediately.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.IFileTransfer">
            <summary>
            Allow files to be transfered.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IFileTransfer.Download(System.IO.Stream)">
            <summary>
            Download a file.
            </summary>
            <param name="destination">The destination to download the file to.</param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.IntegrationRequest">
            <summary>
            A request to integrate a project (start a build).
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.NullRequest">
            <summary>
            A null request.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.#ctor(ThoughtWorks.CruiseControl.Remote.BuildCondition,System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.IntegrationRequest"/>.
            </summary>
            <param name="buildCondition"></param>
            <param name="source"></param>
            <param name="userName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.Equals(System.Object)">
            <summary>
            Checks if two <see cref="T:ThoughtWorks.CruiseControl.Remote.IntegrationRequest"/> instances are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.GetHashCode">
            <summary>
            Retrieves the hashcode for this request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.ToString">
            <summary>
            Converts this request into a string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.BuildCondition">
            <summary>
            The build condition.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.Source">
            <summary>
            The source of the request.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.UserName">
            <summary>
            The user who triggered the build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.BuildValues">
            <summary>
            The build parameters to use.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.RequestTime">
            <summary>
            The time the request was generated.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.IntegrationRequest.PublishOnSourceControlException">
            <summary>
            Should the results of a failed source control exception be published?
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.IntegrationStatus">
            <summary>
            Enumeration of possible summations following the integration of a project.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationStatus.Success">
            <summary>
            Indicates the project's integration was successful.  Compilation succeeded,
            and any tests passed.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationStatus.Failure">
            <summary>
            Indicates the project's integration failed.  Either the compilation or tests failed.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationStatus.Exception">
            <summary>
            Indicated CruiseControl.NET experienced exceptional circumstances during the
            integration of the project.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationStatus.Unknown">
            <summary>
            Indicates the state of the most recent integration is unknown.  Perhaps no integration
            has yet occurred.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.IntegrationStatus.Cancelled">
            <summary>
            Indicates that the most recent integration was cancelled.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus">
            <summary>
            Defines the build status of an item.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.Pending">
            <summary>
            The item is pending.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.Running">
            <summary>
            The item is currently running.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.CompletedSuccess">
            <summary>
            The item has completed running with a success status.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.CompletedFailed">
            <summary>
            The item has completed running with a failed status.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.Cancelled">
            <summary>
            The item has been cancelled before running.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ItemBuildStatus.Unknown">
            <summary>
            The status of the item is unknown.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials">
            <summary>
            Defines the security credentials to use for logging in.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials.Serialise">
            <summary>
            Serialises these credentials to a string.
            </summary>
            <returns>The serialised credentials.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials.Deserialise(System.String)">
            <summary>
            Deserialises the credentials.
            </summary>
            <param name="credentials">The credentials to deserialise.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials.Identifier">
            <summary>
            An identifier for these credentials.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials.Item(System.String)">
            <summary>
            Gets or sets a security credential.
            </summary>
            <param name="credential">The credential name.</param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.ISecurityCredentials.Credentials">
            <summary>
            Gets the currently set credentials.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ITrigger">
            <summary>
            Interface of all integration trigger used by CruiseControl.NET.
            A trigger applies to a particular project.
            </summary>
            <title>Trigger Blocks</title>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ITrigger.IntegrationCompleted">
            <summary>
            Notifies the trigger that an integration has completed.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ITrigger.NextBuild">
            <summary>
            Returns the time of the next build.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Message">
            <summary>
            A user-readable message.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.Message"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Message"/> with a message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.Message.MessageKind)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Message"/> with a message.
            </summary>
            <param name="message">The message</param>
            <param name="kind">the message kind</param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.ToString">
            <summary>
            Returns the kind and the message text.
            </summary>
            <returns>The text of the message.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.Equals(System.Object)">
            <summary>
            compares 2 message objects
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Message.GetHashCode">
            <summary>
            Retrieves the hash code for this message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Message.Text">
            <summary>
            The text of the message.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Message.Kind">
            <summary>
            The type of message
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.NoSuchProjectException">
            <summary>
            Specified project does not exist on the buildserver
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter">
            <title>Select Parameter</title>
            <version>1.5</version>
            <summary>
            <para>
            This will prompt the user to select a value from a list of values when a force build is requested.
            </para>
            <para>
            This parameter can then be used by a dynamic value in a task.
            </para>
            </summary>
            <example>
            <code title="Minimalist example">
            &lt;selectParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;allowedValues&gt;
            &lt;value name="Development"&gt;DEV&lt;/value&gt;
            &lt;value name="Test"&gt;TEST&lt;/value&gt;
            &lt;value name="Production"&gt;PROD&lt;/value&gt;
            &lt;/allowedValues&gt;
            &lt;/selectParameter&gt;
            </code>
            <code title="Full example">
            &lt;selectParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;display&gt;Target to Build&lt;/display&gt;
            &lt;description&gt;Which target do you want to build?&lt;/description&gt;
            &lt;default&gt;DEV&lt;/default&gt;
            &lt;minimum&gt;3&lt;/minimum&gt;
            &lt;maximum&gt;10&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;sourceFile&gt;C:\Builds\Values.txt&lt;/sourceFile&gt;
            &lt;/selectParameter&gt;
            </code>
            <code title="Example in Context">
            &lt;project name="Test Project"&gt;
            &lt;sourcecontrol type="svn"&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/sourcecontrol&gt;
            &lt;triggers&gt;
            &lt;intervalTrigger /&gt;
            &lt;/triggers&gt;
            &lt;tasks&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/tasks&gt;
            &lt;publishers&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/publishers&gt;
            &lt;parameters&gt;
            &lt;selectParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;allowedValues&gt;
            &lt;value name="Development"&gt;DEV&lt;/value&gt;
            &lt;value name="Test"&gt;TEST&lt;/value&gt;
            &lt;value name="Production"&gt;PROD&lt;/value&gt;
            &lt;/allowedValues&gt;
            &lt;/selectParameter&gt;
            &lt;/parameters&gt;
            &lt;/project&gt;
            </code>
            </example>
            <remarks>
            In order for this parameter to work, either the allowed values or a source file must be set. If both are set,
            the source file will be used.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.Convert(System.String)">
            <summary>
            Converts the parameter into the value to use.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The value to use.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.GenerateClientDefault">
            <summary>
            Updates the client default value.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.SetClientDefault">
            <summary>
            Sets the client default value.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.IsRequired">
            <summary>
            Is the parameter required?
            </summary>
            <version>1.5</version>
            <default>false</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.SourceFile">
            <summary>
            Load the values from a file.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.DataValues">
            <summary>
            An array of allowed values.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.DefaultValue">
            <summary>
            The default value to use.
            </summary>
            <version>1.5</version>
            <default>None</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.SelectParameter.ClientDefaultValue">
            <summary>
            The default value for the clients to use.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter">
            <title>Text Parameter</title>
            <version>1.5</version>
            <summary>
            <para>
            This will prompt the user to enter a text value when a force build is requested.
            </para>
            <para>
            This parameter can then be used by a dynamic value in a task.
            </para>
            </summary>
            <example>
            <code title="Minimalist example">
            &lt;textParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;/textParameter&gt;
            </code>
            <code title="Full example">
            &lt;textParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;display&gt;Target to Build&lt;/display&gt;
            &lt;description&gt;Which target do you want to build?&lt;/description&gt;
            &lt;default&gt;DEV&lt;/default&gt;
            &lt;minimum&gt;3&lt;/minimum&gt;
            &lt;maximum&gt;10&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/textParameter&gt;
            </code>
            <code title="Example in Context">
            &lt;project name="Test Project"&gt;
            &lt;sourcecontrol type="svn"&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/sourcecontrol&gt;
            &lt;triggers&gt;
            &lt;intervalTrigger /&gt;
            &lt;/triggers&gt;
            &lt;tasks&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/tasks&gt;
            &lt;publishers&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/publishers&gt;
            &lt;parameters&gt;
            &lt;textParameter&gt;
            &lt;name&gt;Target&lt;/name&gt;
            &lt;display&gt;Target to Build&lt;/display&gt;
            &lt;description&gt;Which target do you want to build?&lt;/description&gt;
            &lt;default&gt;DEV&lt;/default&gt;
            &lt;minimum&gt;3&lt;/minimum&gt;
            &lt;maximum&gt;10&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/textParameter&gt;
            &lt;/parameters&gt;
            &lt;/project&gt;
            </code>
            </example>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.MinimumLength">
            <summary>
            The minimum allowed length.
            </summary>
            <version>1.5</version>
            <default>0</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.MaximumLength">
            <summary>
            The maximum allowed length of the parameter.
            </summary>
            <version>1.5</version>
            <default>2147483647</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.IsRequired">
            <summary>
            Is the parameter required?
            </summary>
            <version>1.5</version>
            <default>false</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.TextParameter.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter">
            <title>Numeric Parameter</title>
            <version>1.5</version>
            <summary>
            <para>
            This will prompt the user to enter a numeric value when a force build is requested.
            </para>
            <para>
            This parameter can then be used by a dynamic value in a task.
            </para>
            </summary>
            <example>
            <code title="Minimalist example">
            &lt;numericParameter&gt;
            &lt;name&gt;MaxAllowedErrors&lt;/name&gt;
            &lt;/numericParameter&gt;
            </code>
            <code title="Full example">
            &lt;numericParameter&gt;
            &lt;name&gt;MaxAllowedErrors&lt;/name&gt;
            &lt;display&gt;Maximum Allowed Errors&lt;/display&gt;
            &lt;description&gt;What is the maximum allowed number of unit test errors?&lt;/description&gt;
            &lt;default&gt;5&lt;/default&gt;
            &lt;minimum&gt;0&lt;/minimum&gt;
            &lt;maximum&gt;10&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/numericParameter&gt;
            </code>
            <code title="Example in Context">
            &lt;project name="Test Project"&gt;
            &lt;sourcecontrol type="svn"&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/sourcecontrol&gt;
            &lt;triggers&gt;
            &lt;intervalTrigger /&gt;
            &lt;/triggers&gt;
            &lt;tasks&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/tasks&gt;
            &lt;publishers&gt;
            &lt;!-- Omitted for brevity --&gt;
            &lt;/publishers&gt;
            &lt;parameters&gt;
            &lt;numericParameter&gt;
            &lt;name&gt;MaxAllowedErrors&lt;/name&gt;
            &lt;display&gt;Maximum Allowed Errors&lt;/display&gt;
            &lt;description&gt;What is the maximum allowed number of unit test errors?&lt;/description&gt;
            &lt;default&gt;5&lt;/default&gt;
            &lt;minimum&gt;0&lt;/minimum&gt;
            &lt;maximum&gt;10&lt;/maximum&gt;
            &lt;required&gt;false&lt;/required&gt;
            &lt;/numericParameter&gt;
            &lt;/parameters&gt;
            &lt;/project&gt;
            </code>
            </example>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.#ctor">
            <summary>
            Initialise a new instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.#ctor(System.String)">
            <summary>
            Initialise an instance of a <see cref="T:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter"/> with a name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.Validate(System.String)">
            <summary>
            Validates the parameter.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Any validation exceptions.</returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.MinimumValue">
            <summary>
            The mimimum allowed value of the parameter.
            </summary>
            <version>1.5</version>
            <default>-1.79769e+308</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.MaximumValue">
            <summary>
            The maximum allowed value of the parameter.
            </summary>
            <version>1.5</version>
            <default>1.79769e+308</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.IsRequired">
            <summary>
            Is the parameter required?
            </summary>
            <version>1.5</version>
            <default>false</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Parameters.NumericParameter.AllowedValues">
            <summary>
            An array of allowed values.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.PackageDetails">
            <summary>
            Details on a package.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.PackageDetails.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.PackageDetails"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.PackageDetails.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.PackageDetails"/> with a package.
            </summary>
            <param name="package">The location of the package.</param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.Name">
            <summary>
            The name of the package.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.BuildLabel">
            <summary>
            The label of the build this package is for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.DateTime">
            <summary>
            The date and time the package was generated.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.NumberOfFiles">
            <summary>
            The number of files in the package.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.Size">
            <summary>
            The size of the package.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.PackageDetails.FileName">
            <summary>
            The actual name of the file on the server.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity">
            <summary>
            Enumeration of the possible activities of a project under continuous
            integration by CruiseControl.NET.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.#ctor">
            <summary>
            Starts a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.#ctor(System.String)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/>.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.IsBuilding">
            <summary>
            Is this a building status?
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.IsSleeping">
            <summary>
            Is this a sleeping status?
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.IsPending">
            <summary>
            Is this a pending status?
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.IsCheckingModifications">
            <summary>
            Is this a CheckingModifications status?
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.Equals(System.Object)">
            <summary>
            Checks if two <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/> are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.GetHashCode">
            <summary>
            Retrieves the hashcode for this <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.ToString">
            <summary>
            Returns the type of activity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.op_Equality(ThoughtWorks.CruiseControl.Remote.ProjectActivity,ThoughtWorks.CruiseControl.Remote.ProjectActivity)">
            <summary>
            Compares if two <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/> are the same.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectActivity.op_Inequality(ThoughtWorks.CruiseControl.Remote.ProjectActivity,ThoughtWorks.CruiseControl.Remote.ProjectActivity)">
            <summary>
            Compares if two <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectActivity"/> are different.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectActivity.CheckingModifications">
            <summary>
            CruiseControl.NET is checking for modifications in this project's
            source control system.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectActivity.Building">
            <summary>
            CruiseControl.NET is running the build phase of the project's
            integration.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectActivity.Sleeping">
            <summary>
            CruiseControl.NET is sleeping, and no activity is being performed
            for this project.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectActivity.Pending">
            <summary>
            CruiseControl.NET is queuing a pending build integration request for this project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectActivity.Type">
            <summary>
            The type of project activity.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState">
            <summary>
            Enumeration of possible states for a project's integrator.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState.Running">
            <summary>
            Integration is running, or will run when appropriate.  This value
            indicates that the project integrator is alive, whether currently
            integrating or not.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState.Stopping">
            <summary>
            The project integrator will stop when the current integration has
            completed.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState.Stopped">
            <summary>
            The project integrator has stopped integration.  The project will
            not be integrated until the integrator is started again.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState.Unknown">
            <summary>
            The project status is unknown.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.ProjectStatus">
            <summary>
            Value type that contains extensive details about a project's most recent
            integration.
            </summary>
            <remarks>
            This class is serialized to persist CruiseControl.NET's state for a
            particular project, hence is is marked with a <see cref="T:System.SerializableAttribute"/>.
            </remarks>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectStatus.#ctor">
            <summary>
            Initialises a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectStatus"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectStatus.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.IntegrationStatus,System.DateTime)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectStatus"/>.
            </summary>
            <param name="name"></param>
            <param name="buildStatus"></param>
            <param name="lastBuildDate"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.ProjectStatus.#ctor(System.String,System.String,ThoughtWorks.CruiseControl.Remote.ProjectActivity,ThoughtWorks.CruiseControl.Remote.IntegrationStatus,ThoughtWorks.CruiseControl.Remote.ProjectIntegratorState,System.String,System.DateTime,System.String,System.String,System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.ProjectStatus"/>.
            </summary>
            <param name="name"></param>
            <param name="category"></param>
            <param name="activity"></param>
            <param name="buildStatus"></param>
            <param name="status"></param>
            <param name="webURL"></param>
            <param name="lastBuildDate"></param>
            <param name="lastBuildLabel"></param>
            <param name="lastSuccessfulBuildLabel"></param>
            <param name="nextBuildTime"></param>
            <param name="buildStage"></param>
            <param name="queue"></param>
            <param name="queuePriority"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.BuildStage">
            <summary>
            The current stage of the build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.ServerName">
            <summary>
            The name of the server this status is from.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Status">
            <summary>
            The current status of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.BuildStatus">
            <summary>
            The current integration status.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Activity">
            <summary>
            The current project activity.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Name">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Description">
            <summary>
            The description of the project (optional).
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Category">
            <summary>
            The category of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Queue">
            <summary>
            The name of the queue that the project belongs to.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.QueuePriority">
            <summary>
            The project of this project within the queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.WebURL">
            <summary>
            The URL for viewing the project details.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.LastBuildDate">
            <summary>
            The date the project last built.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.LastBuildLabel">
            <summary>
            The label of the last build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.LastSuccessfulBuildLabel">
            <summary>
            The label of the last successful build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.NextBuildTime">
            <summary>
            The time the build will next be checked.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.Messages">
            <summary>
            Any messages for a build.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.ProjectStatus.CurrentMessage">
            <summary>
            The most current message in the build.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot">
            <summary>
            A snapshot of the state of an item on a particular named queue at this moment in time.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.ProjectActivity)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot"/>.
            </summary>
            <param name="projectName"></param>
            <param name="activity"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.ProjectActivity,System.DateTime)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot"/>.
            </summary>
            <param name="projectName"></param>
            <param name="activity"></param>
            <param name="requestTime"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.ProjectName">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.Activity">
            <summary>
            The current activity.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueuedRequestSnapshot.RequestTime">
            <summary>
            The time of the request.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot">
            <summary>
            Represents a snapshot of the integration queue's current state at a point in time.
            For serializing to CCTray and the web dashboard.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot"/> class.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot.FindByName(System.String)">
            <summary>
            Finds a queue by its name.
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot.DataReceived(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Handle any old (pre-1.5.0) data.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueueSetSnapshot.Queues">
            <summary>
            The queues on the server and their current status.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.QueueSnapshot">
            <summary>
            A snapshot of a particular integration queue and it's contents.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.QueueSnapshot"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.#ctor(System.String)">
            <summary>
            Initialise a new populated <see cref="T:ThoughtWorks.CruiseControl.Remote.QueueSnapshot"/>.
            </summary>
            <param name="queueName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.DataReceived(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Handle any old (pre-1.5.0) data.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.QueueName">
            <summary>
            The name of the queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.Requests">
            <summary>
            The current requests in the queue.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.QueueSnapshot.IsEmpty">
            <summary>
            Whether there are any requests in the queue or not.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.RemotingFileTransfer">
            <summary>
            Transfer a file over .NET remoting.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingFileTransfer.#ctor(System.IO.Stream)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.RemotingFileTransfer"/>.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.RemotingFileTransfer.Download(System.IO.Stream)">
            <summary>
            Download a file.
            </summary>
            <param name="destination">The destination to download the file to.</param>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters">
            <summary>
            Generates a filter.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.ByProject(System.String)">
            <summary>
            Filters by project.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.ByUser(System.String)">
            <summary>
            Filters by user.
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.ByEventType(ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent)">
            <summary>
            Filters by event type.
            </summary>
            <param name="eventType"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.ByRight(ThoughtWorks.CruiseControl.Remote.Security.SecurityRight)">
            <summary>
            Filters by security right.
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.ByDateRange(System.DateTime,System.DateTime)">
            <summary>
            Filters by date range.
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.AuditFilters.Combine(ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase[])">
            <summary>
            Combines multiple filters together.
            </summary>
            <param name="filters">The filters to combine.</param>
            <returns></returns>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord">
            <summary>
            Details about an evented event.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.TimeOfEvent">
            <summary>
            The date and time of the event.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.ProjectName">
            <summary>
            The name of the project the event was for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.UserName">
            <summary>
            The name of the user the event was for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.EventType">
            <summary>
            The type of event.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.SecurityRight">
            <summary>
            The right that is being audited.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.AuditRecord.Message">
            <summary>
            An optional message for the event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter">
            <summary>
            Combines two or more filters together.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase[])">
            <summary>
            Starts a new filter with the filters to combine.
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase[],ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the security right and inner filter.
            </summary>
            <param name="filters"></param>
            <param name="innerFilter"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the security right matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.CombinationAuditFilter.Filters">
            <summary>
            The filters to combine.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter">
            <summary>
            Filters by a date range.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Starts a new filter with the date range.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.#ctor(System.DateTime,System.DateTime,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the date range and inner filter.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the date range matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.StartDate">
            <summary>
            The start date.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.DateRangeAuditFilter.EndDate">
            <summary>
            The end date.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter">
            <summary>
            Filters by an event type.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent)">
            <summary>
            Starts a new filter with the event type.
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the event type and inner filter.
            </summary>
            <param name="eventType"></param>
            <param name="innerFilter"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the event type matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.EventTypeAuditFilter.EventType">
            <summary>
            The type of event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter">
            <summary>
            Filters by a project name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter.#ctor(System.String)">
            <summary>
            Starts a new filter with the project name.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the project name and inner filter..
            </summary>
            <param name="projectName"></param>
            <param name="innerFilter"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the project name matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.ProjectAuditFilter.ProjectName">
            <summary>
            The name of the project.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.SecurityCheckDiagnostics">
            <summary>
            Provides diagnostics on a security check.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.SecurityCheckDiagnostics.Permission">
            <summary>
            The name of the permission being diagnosed.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.SecurityCheckDiagnostics.Project">
            <summary>
            The name of the project the permission is being checked against.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.SecurityCheckDiagnostics.User">
            <summary>
            The name of the user being the permission is being checked for.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.SecurityCheckDiagnostics.IsAllowed">
            <summary>
            Whether this permission is allowed.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent">
            <summary>
            Defines the events that can be logged.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.Unknown">
            <summary>
            The event type is unknown.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.Login">
            <summary>
            A login event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.Logout">
            <summary>
            A logout event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.ForceBuild">
            <summary>
            A force build event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.AbortBuild">
            <summary>
            An abort build event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.StartProject">
            <summary>
            A start project event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.StopProject">
            <summary>
            A stop project event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.CancelRequest">
            <summary>
            A cancel request event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.SendMessage">
            <summary>
            A send message event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.GetSecurityConfiguration">
            <summary>
            A get security configuration event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.ListAllUsers">
            <summary>
            A list all users event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.DiagnoseSecurityPermissions">
            <summary>
            A diagnose security permission event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.ViewAuditLog">
            <summary>
            A view audit log event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.ChangePassword">
            <summary>
            A change password event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.ResetPassword">
            <summary>
            A reset password event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.AddProject">
            <summary>
            An add project event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.DeleteProject">
            <summary>
            A delete project event.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityEvent.UpdateProject">
            <summary>
            An update project event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.SecurityRight">
            <summary>
            The security levels.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityRight.Allow">
            <summary>
            The security right is allowed.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityRight.Deny">
            <summary>
            The security right is denied.
            </summary>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.Security.SecurityRight.Inherit">
            <summary>
            The security right will be inherited.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter">
            <summary>
            Filters by a security right.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.SecurityRight)">
            <summary>
            Starts a new filter with the security right.
            </summary>
            <param name="securityRight"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter.#ctor(ThoughtWorks.CruiseControl.Remote.Security.SecurityRight,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the security right and inner filter.
            </summary>
            <param name="securityRight"></param>
            <param name="innerFilter"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the security right matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.SecurityRightAuditFilter.SecurityRight">
            <summary>
            The type of event.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter">
            <summary>
            Filters by a user name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter.#ctor">
            <summary>
            Initialises a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter.#ctor(System.String)">
            <summary>
            Starts a new filter with the user name.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter.#ctor(System.String,ThoughtWorks.CruiseControl.Remote.Security.AuditFilterBase)">
            <summary>
            Starts a new filter with the user name and inner filter..
            </summary>
            <param name="userName"></param>
            <param name="innerFilter"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter.DoCheckFilter(ThoughtWorks.CruiseControl.Remote.Security.AuditRecord)">
            <summary>
            Checks if the user name matches.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.UserAuditFilter.UserName">
            <summary>
            The name of the user.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails">
            <summary>
            The details on a user.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.#ctor">
            <summary>
            Initialise a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.#ctor(System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/> with a user name.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.#ctor(System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/> with user and display names.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.Security.UserDetails"/> with user name, display name and type.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.UserName">
            <summary>
            The login (user) name of the user.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.DisplayName">
            <summary>
            The display name of the user.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.Security.UserDetails.Type">
            <summary>
            The type of the user.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.SerializableDateTime">
            <summary>
            A date/time that can be serialised.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.SerializableDateTime.#ctor(System.DateTime)">
            <summary>
            Initialise a new <see cref="T:ThoughtWorks.CruiseControl.Remote.SerializableDateTime"/>.
            </summary>
            <param name="dateTime"></param>
        </member>
        <member name="F:ThoughtWorks.CruiseControl.Remote.SerializableDateTime.Default">
            <summary>
            The default date/time.
            </summary>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.SerializableDateTime.DateTime">
            <summary>
            The serialised date/time.
            </summary>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.NameValuePair">
            <title>Named Value</title>
            <version>1.4.4</version>
            <summary>
            <para>
            A value with an associated name. This is a generic configuration item that is used in other configuration
            elements.
            </para>
            </summary>
            <example>
            <code >
            &lt;namedValue name="The Name" value="something" /&gt;
            </code>
            </example>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.#ctor">
            <summary>
            Starts a new blank <see cref="T:ThoughtWorks.CruiseControl.Remote.NameValuePair"/>.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.#ctor(System.String,System.String)">
            <summary>
            Starts a new <see cref="T:ThoughtWorks.CruiseControl.Remote.NameValuePair"/> with a name and value.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.ToDictionary(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Converts a list of <see cref="T:ThoughtWorks.CruiseControl.Remote.NameValuePair"/> to a dictionary of strings.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Converts a list of <see cref="T:ThoughtWorks.CruiseControl.Remote.NameValuePair"/> from a dictionary of strings.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.FindNamedValue(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair},System.String)">
            <summary>
            Attempts to find a named value.
            </summary>
            <param name="values"></param>
            <param name="name">The name of the value to find.</param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.Copy(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Copies all the values from a dictionary into a list.
            </summary>
            <param name="dictionary"></param>
            <param name="list"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.Copy(System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair},System.Collections.Generic.List{ThoughtWorks.CruiseControl.Remote.NameValuePair})">
            <summary>
            Copies all the values from one list to another.
            </summary>
            <param name="destination"></param>
            <param name="source"></param>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like
            a hash table. 
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.NameValuePair.Equals(ThoughtWorks.CruiseControl.Remote.NameValuePair)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.NameValuePair.Name">
            <summary>
            The name of the value.
            </summary>
            <version>1.4.4</version>
            <default>n/a</default>
        </member>
        <member name="P:ThoughtWorks.CruiseControl.Remote.NameValuePair.Value">
            <summary>
            The actual value.
            </summary>
            <version>1.4.4</version>
            <default>n/a</default>
        </member>
        <member name="T:ThoughtWorks.CruiseControl.Remote.XmlConversionUtil">
            <summary>
            Helper class for converting XML to objects.
            </summary>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.XmlConversionUtil.ProcessResponse(System.String)">
            <summary>
            Converts a response string into a response object.
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.XmlConversionUtil.FindMessageType(System.String)">
            <summary>
            Finds the type of object that a message is.
            </summary>
            <param name="messageName">The name of the message.</param>
            <returns>The message type, if found, null otherwise.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.XmlConversionUtil.ConvertXmlToObject(System.Type,System.String)">
            <summary>
            Converts a message string into an object.
            </summary>
            <param name="messageType">The type of message.</param>
            <param name="message">The XML of the message.</param>
            <returns>The object of the message.</returns>
        </member>
        <member name="M:ThoughtWorks.CruiseControl.Remote.XmlConversionUtil.ConvertXmlToRequest(System.String)">
            <summary>
            Converts a message string into a request.
            </summary>
            <param name="message">The XML of the message.</param>
            <returns>The converted <see cref="T:ThoughtWorks.CruiseControl.Remote.Messages.ServerRequest"/>.</returns>
        </member>
    </members>
</doc>
